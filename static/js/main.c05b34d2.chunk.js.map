{"version":3,"sources":["utils/api.js","components/Images.js","actions.js","components/SearchImages.js","components/Search.js","reducers.js","App.js","serviceWorker.js","index.js"],"names":["unsplash","Unsplash","applicationId","secret","Images","this","props","loadDataCol1","loadDataCol2","loadDataCol3","Object","keys","search","react_default","a","createElement","className","col1","map","img","href","links","html","target","key","id","src","urls","small","alt","description","col2","col3","Component","connect","state","isFetchingCol1","dataCol1","isFetching","isFetchingCol2","dataCol2","isFetchingCol3","dataCol3","dataSearch1","search1","dispatch","type","photos","listPhotos","then","response","json","data","loadDataSuccessCol1","catch","error","loadDataFailureCol1","loadDataSuccessCol2","loadDataFailureCol2","loadDataSuccessCol3","loadDataFailureCol3","SearchImages","search2","search3","isFetchingSearch1","isFetchingSearch2","dataSearch2","isFetchingSearch3","dataSearch3","Search","query","loadDataSearch1","loadDataSearch2","loadDataSearch3","_this","placeholder","onChange","event","handleInput","value","loadDataSuccessSearch1","results","loadDataFailureSearch1","loadDataSuccessSearch2","loadDataFailureSearch2","loadDataSuccessSearch3","loadDataFailureSearch3","INITIAL_STATE","combineReducers","arguments","length","undefined","action","store","createStore","reducers","applyMiddleware","thunk","logger","App","es","components_Search","components_Images","components_SearchImages","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c05b34d2.chunk.js","sourcesContent":["import Unsplash from 'unsplash-js'\r\n\r\nexport const unsplash = new Unsplash({\r\n    applicationId: \"54a0ffc9cbe6d557cd16a8723cadc180b25a39351a47ce7b20f2d8ada2d62e8c\",\r\n    secret: \"bcf4d7f27a1800be9b3ec645f505b0e839d595a15c81ab6e490157819c0e16c2\"\r\n});","import React, { Component } from 'react'\r\nimport { loadDataCol1, loadDataCol2, loadDataCol3 } from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Images extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadDataCol1()\r\n        this.props.loadDataCol2()\r\n        this.props.loadDataCol3()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            Object.keys(this.props.search) <= 0 &&\r\n            <div className=\"App-images-search\">\r\n                    <div className=\"col-images\">\r\n                        {this.props.col1.map(img =>\r\n                            <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                                <img src={img.urls.small} alt={img.description} />\r\n                            </a>\r\n                        )\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-images\">\r\n                        {this.props.col2.map(img =>\r\n                            <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                                <img src={img.urls.small} alt={img.description} />\r\n                            </a>\r\n                        )\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-images\">\r\n                        {this.props.col3.map(img =>\r\n                            <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                                <img src={img.urls.small} alt={img.description} />\r\n                            </a>\r\n                        )\r\n                        }\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFetchingCol1: state.dataCol1.isFetching,\r\n        col1: state.dataCol1.col1,\r\n        isFetchingCol2: state.dataCol2.isFetching,\r\n        col2: state.dataCol2.col2,\r\n        isFetchingCol3: state.dataCol3.isFetching,\r\n        col3: state.dataCol3.col3,\r\n        search: state.dataSearch1.search1\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadDataCol1: () => dispatch(loadDataCol1()),\r\n        loadDataCol2: () => dispatch(loadDataCol2()),\r\n        loadDataCol3: () => dispatch(loadDataCol3())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Images)","import { unsplash } from './utils/api'\r\n\r\nexport const loadDataRequestCol1 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_REQUEST1'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessCol1 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SUCCESS1',\r\n        col1: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureCol1 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_FAILURE1',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataCol1 = () => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestCol1())\r\n        unsplash.photos.listPhotos(1, 30, \"latest\")\r\n            .then(response => response.json())\r\n            .then((data) => dispatch(loadDataSuccessCol1(data)))\r\n            .catch(error => dispatch(loadDataFailureCol1(error)))\r\n    }\r\n}\r\n\r\nexport const loadDataRequestCol2 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_REQUEST2'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessCol2 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SUCCESS2',\r\n        col2: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureCol2 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_FAILURE0',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataCol2 = () => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestCol2())\r\n        unsplash.photos.listPhotos(2, 30, \"latest\")\r\n            .then(response =>response.json())\r\n            .then((data) => dispatch(loadDataSuccessCol2(data)))\r\n            .catch(error => dispatch(loadDataFailureCol2(error)))\r\n    }\r\n}\r\n\r\nexport const loadDataRequestCol3 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_REQUEST3'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessCol3 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SUCCESS3',\r\n        col3: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureCol3 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_FAILURE3',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataCol3 = () => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestCol3())\r\n        unsplash.photos.listPhotos(3, 30, \"latest\")\r\n            .then(response =>response.json())\r\n            .then((data) => dispatch(loadDataSuccessCol3(data)))\r\n            .catch(error => dispatch(loadDataFailureCol3(error)))\r\n    }\r\n}\r\n\r\nexport const loadDataRequestSearch1 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_REQUEST1'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessSearch1 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_SUCCESS1',\r\n        search1: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureSearch1 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_FAILURE1',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataSearch1 = (data) => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestSearch1())\r\n        unsplash.search.photos(data, 1, 30)\r\n            .then(response =>response.json())\r\n            .then((data) => dispatch(loadDataSuccessSearch1(data.results)))\r\n            .catch(error => dispatch(loadDataFailureSearch1(error)))\r\n    }\r\n}\r\n\r\nexport const loadDataRequestSearch2 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_REQUEST2'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessSearch2 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_SUCCESS2',\r\n        search2: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureSearch2 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_FAILURE2',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataSearch2 = (data) => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestSearch2())\r\n        unsplash.search.photos(data, 2, 30)\r\n            .then(response =>response.json())\r\n            .then((data) => dispatch(loadDataSuccessSearch2(data.results)))\r\n            .catch(error => dispatch(loadDataFailureSearch2(error)))\r\n    }\r\n}\r\n\r\nexport const loadDataRequestSearch3 = () => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_REQUEST3'\r\n    }\r\n}\r\n\r\nexport const loadDataSuccessSearch3 = (data) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_SUCCESS3',\r\n        search3: data\r\n    }\r\n}\r\n\r\nexport const loadDataFailureSearch3 = (error) => {\r\n    return {\r\n        type: 'LOAD_DATA_SEARCH_FAILURE3',\r\n        error\r\n    }\r\n}\r\n\r\nexport const loadDataSearch3 = (data) => {\r\n    return dispatch => {\r\n        dispatch(loadDataRequestSearch3())\r\n        unsplash.search.photos(data, 3, 30)\r\n            .then(response =>response.json())\r\n            .then((data) => dispatch(loadDataSuccessSearch3(data.results)))\r\n            .catch(error => dispatch(loadDataFailureSearch3(error)))\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchImages extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-images-search\">\r\n                <div className=\"col-images\">\r\n                    {this.props.search1.map(img =>\r\n                        <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                            <img src={img.urls.small} alt={img.description} />\r\n                        </a>\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className=\"col-images\">\r\n                    {this.props.search2.map(img =>\r\n                        <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                            <img src={img.urls.small} alt={img.description} />\r\n                        </a>\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className=\"col-images\">\r\n                    {this.props.search3.map(img =>\r\n                        <a href={img.links.html} target=\"window.open();\" key={img.id}>\r\n                            <img src={img.urls.small} alt={img.description} />\r\n                        </a>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFetchingSearch1: state.dataSearch1.isFetching,\r\n        search1: state.dataSearch1.search1,\r\n        isFetchingSearch2: state.dataSearch2.isFetching,\r\n        search2: state.dataSearch2.search2,\r\n        isFetchingSearch3: state.dataSearch3.isFetching,\r\n        search3: state.dataSearch3.search3\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SearchImages)","import React, { Component } from 'react'\r\nimport { loadDataSearch1, loadDataSearch2, loadDataSearch3 } from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Search extends Component {\r\n\r\n    handleInput(query) {\r\n      this.props.loadDataSearch1(query)\r\n      this.props.loadDataSearch2(query)\r\n      this.props.loadDataSearch3(query)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"App-search\">\r\n                    <div className=\"App-search-content\">\r\n                        <h1>API - Unsplash</h1>\r\n                        <input type=\"text\" placeholder=\"Search a image\" onChange={(event) => this.handleInput(event.target.value)} />\r\n                        <small>Example: wallpaper, background, dogs, technology</small>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadDataSearch1: (data) => dispatch(loadDataSearch1(data)),\r\n        loadDataSearch2: (data) => dispatch(loadDataSearch2(data)),\r\n        loadDataSearch3: (data) => dispatch(loadDataSearch3(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Search)\r\n","import { combineReducers } from 'redux'\r\n\r\nconst INITIAL_STATE = {\r\n    col1: [],\r\n    col2: [],\r\n    col3: [],\r\n    search1: [],\r\n    search2: [],\r\n    search3: [],\r\n    error: [],\r\n    isFetching: false\r\n}\r\n\r\nexport const dataCol1 = (state = INITIAL_STATE, action) => {\r\n        if (action.type === 'LOAD_DATA_REQUEST1') {\r\n            return {\r\n                isFetching: true,\r\n                col1: []\r\n            }\r\n        }else if (action.type === 'LOAD_DATA_SUCCESS1') {\r\n            return {\r\n                isFetching: false,\r\n                col1: action.col1,     \r\n            }\r\n        } else if (action.type === 'LOAD_DATA_FAILURE1') {\r\n            return {\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        }\r\n    return state\r\n}\r\n\r\nexport const dataCol2 = (state = INITIAL_STATE, action) => {\r\n    if (action.type === 'LOAD_DATA_REQUEST2') {\r\n        return {\r\n            isFetching: true,\r\n            col2: []\r\n        }\r\n    }else if (action.type === 'LOAD_DATA_SUCCESS2') {\r\n        return {\r\n            isFetching: false,\r\n            col2: action.col2,     \r\n        }\r\n    } else if (action.type === 'LOAD_DATA_FAILURE2') {\r\n        return {\r\n            isFetching: false,\r\n            error: action.error\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const dataCol3 = (state = INITIAL_STATE, action) => {\r\n        if (action.type === 'LOAD_DATA_REQUEST3') {\r\n            return {\r\n                isFetching: true,\r\n                col3: []\r\n            }\r\n        }else if (action.type === 'LOAD_DATA_SUCCESS3') {\r\n            return {\r\n                isFetching: false,\r\n                col3: action.col3,     \r\n            }\r\n        } else if (action.type === 'LOAD_DATA_FAILURE3') {\r\n            return {\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        }\r\n    return state\r\n}\r\n\r\nexport const dataSearch1 = (state = INITIAL_STATE, action) => {\r\n        if (action.type === 'LOAD_DATA_SEARCH_REQUEST1') {\r\n            return {\r\n                isFetching: true,\r\n                search1: []\r\n            }\r\n        }else if (action.type === 'LOAD_DATA_SEARCH_SUCCESS1') {\r\n            return {\r\n                isFetching: false,\r\n                search1: action.search1\r\n            }\r\n        } else if (action.type === 'LOAD_DATA_SEARCH_FAILURE1') {\r\n            return {\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        }\r\n    return state\r\n}\r\n\r\nexport const dataSearch2 = (state = INITIAL_STATE, action) => {\r\n    if (action.type === 'LOAD_DATA_SEARCH_REQUEST2') {\r\n        return {\r\n            isFetching: true,\r\n            search2: []\r\n        }\r\n    }else if (action.type === 'LOAD_DATA_SEARCH_SUCCESS2') {\r\n        return {\r\n            isFetching: false,\r\n            search2: action.search2\r\n        }\r\n    } else if (action.type === 'LOAD_DATA_SEARCH_FAILURE2') {\r\n        return {\r\n            isFetching: false,\r\n            error: action.error\r\n        }\r\n    }\r\nreturn state\r\n}\r\n\r\nexport const dataSearch3 = (state = INITIAL_STATE, action) => {\r\n    if (action.type === 'LOAD_DATA_SEARCH_REQUEST3') {\r\n        return {\r\n            isFetching: true,\r\n            search3: []\r\n        }\r\n    }else if (action.type === 'LOAD_DATA_SEARCH_SUCCESS3') {\r\n        return {\r\n            isFetching: false,\r\n            search3: action.search3\r\n        }\r\n    } else if (action.type === 'LOAD_DATA_SEARCH_FAILURE3') {\r\n        return {\r\n            isFetching: false,\r\n            error: action.error\r\n        }\r\n    }\r\nreturn state\r\n}\r\n\r\nexport default combineReducers({\r\n    dataCol1,\r\n    dataCol2,\r\n    dataCol3,\r\n    dataSearch1,\r\n    dataSearch2,\r\n    dataSearch3\r\n})","import React, { Component } from 'react'\nimport './App.css'\nimport Images from './components/Images'\nimport SearchImages from './components/SearchImages'\nimport Search from './components/Search'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk, logger)\n)\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Search />\n          <Images />\n          <SearchImages />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}